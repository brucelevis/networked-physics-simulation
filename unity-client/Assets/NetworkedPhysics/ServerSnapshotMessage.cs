// automatically generated by the FlatBuffers compiler, do not modify

namespace NetworkedPhysics
{

using System;
using FlatBuffers;

public sealed class ServerSnapshotMessage : Table {
  public static ServerSnapshotMessage GetRootAsServerSnapshotMessage(ByteBuffer _bb) { return GetRootAsServerSnapshotMessage(_bb, new ServerSnapshotMessage()); }
  public static ServerSnapshotMessage GetRootAsServerSnapshotMessage(ByteBuffer _bb, ServerSnapshotMessage obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ServerSnapshotMessage __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public Entity GetEntities(int j) { return GetEntities(new Entity(), j); }
  public Entity GetEntities(Entity obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int EntitiesLength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<ServerSnapshotMessage> CreateServerSnapshotMessage(FlatBufferBuilder builder,
      VectorOffset entitiesOffset = default(VectorOffset)) {
    builder.StartObject(1);
    ServerSnapshotMessage.AddEntities(builder, entitiesOffset);
    return ServerSnapshotMessage.EndServerSnapshotMessage(builder);
  }

  public static void StartServerSnapshotMessage(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddEntities(FlatBufferBuilder builder, VectorOffset entitiesOffset) { builder.AddOffset(0, entitiesOffset.Value, 0); }
  public static VectorOffset CreateEntitiesVector(FlatBufferBuilder builder, Offset<Entity>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartEntitiesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ServerSnapshotMessage> EndServerSnapshotMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ServerSnapshotMessage>(o);
  }
};


}

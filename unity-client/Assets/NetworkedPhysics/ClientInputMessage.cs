// automatically generated by the FlatBuffers compiler, do not modify

namespace NetworkedPhysics
{

using System;
using FlatBuffers;

public sealed class ClientInputMessage : Table {
  public static ClientInputMessage GetRootAsClientInputMessage(ByteBuffer _bb) { return GetRootAsClientInputMessage(_bb, new ClientInputMessage()); }
  public static ClientInputMessage GetRootAsClientInputMessage(ByteBuffer _bb, ClientInputMessage obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ClientInputMessage __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public InputType Type { get { int o = __offset(4); return o != 0 ? (InputType)bb.GetSbyte(o + bb_pos) : InputType.NONE; } }

  public static Offset<ClientInputMessage> CreateClientInputMessage(FlatBufferBuilder builder,
      InputType type = InputType.NONE) {
    builder.StartObject(1);
    ClientInputMessage.AddType(builder, type);
    return ClientInputMessage.EndClientInputMessage(builder);
  }

  public static void StartClientInputMessage(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddType(FlatBufferBuilder builder, InputType type) { builder.AddSbyte(0, (sbyte)type, 0); }
  public static Offset<ClientInputMessage> EndClientInputMessage(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ClientInputMessage>(o);
  }
};


}

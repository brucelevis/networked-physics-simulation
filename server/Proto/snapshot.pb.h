// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: snapshot.proto

#ifndef PROTOBUF_snapshot_2eproto__INCLUDED
#define PROTOBUF_snapshot_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class Snapshot;
class SnapshotDefaultTypeInternal;
extern SnapshotDefaultTypeInternal _Snapshot_default_instance_;
class Snapshot_Vector3;
class Snapshot_Vector3DefaultTypeInternal;
extern Snapshot_Vector3DefaultTypeInternal _Snapshot_Vector3_default_instance_;

namespace protobuf_snapshot_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_snapshot_2eproto

// ===================================================================

class Snapshot_Vector3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Snapshot.Vector3) */ {
 public:
  Snapshot_Vector3();
  virtual ~Snapshot_Vector3();

  Snapshot_Vector3(const Snapshot_Vector3& from);

  inline Snapshot_Vector3& operator=(const Snapshot_Vector3& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Snapshot_Vector3(Snapshot_Vector3&& from) noexcept
    : Snapshot_Vector3() {
    *this = ::std::move(from);
  }

  inline Snapshot_Vector3& operator=(Snapshot_Vector3&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Snapshot_Vector3& default_instance();

  static inline const Snapshot_Vector3* internal_default_instance() {
    return reinterpret_cast<const Snapshot_Vector3*>(
               &_Snapshot_Vector3_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Snapshot_Vector3* other);
  friend void swap(Snapshot_Vector3& a, Snapshot_Vector3& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Snapshot_Vector3* New() const PROTOBUF_FINAL { return New(NULL); }

  Snapshot_Vector3* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Snapshot_Vector3& from);
  void MergeFrom(const Snapshot_Vector3& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Snapshot_Vector3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:Snapshot.Vector3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct protobuf_snapshot_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Snapshot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Snapshot) */ {
 public:
  Snapshot();
  virtual ~Snapshot();

  Snapshot(const Snapshot& from);

  inline Snapshot& operator=(const Snapshot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Snapshot(Snapshot&& from) noexcept
    : Snapshot() {
    *this = ::std::move(from);
  }

  inline Snapshot& operator=(Snapshot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Snapshot& default_instance();

  static inline const Snapshot* internal_default_instance() {
    return reinterpret_cast<const Snapshot*>(
               &_Snapshot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Snapshot* other);
  friend void swap(Snapshot& a, Snapshot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Snapshot* New() const PROTOBUF_FINAL { return New(NULL); }

  Snapshot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Snapshot& from);
  void MergeFrom(const Snapshot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Snapshot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Snapshot_Vector3 Vector3;

  // accessors -------------------------------------------------------

  // .Snapshot.Vector3 position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::Snapshot_Vector3& position() const;
  ::Snapshot_Vector3* mutable_position();
  ::Snapshot_Vector3* release_position();
  void set_allocated_position(::Snapshot_Vector3* position);

  // bool interacting = 1;
  void clear_interacting();
  static const int kInteractingFieldNumber = 1;
  bool interacting() const;
  void set_interacting(bool value);

  // @@protoc_insertion_point(class_scope:Snapshot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Snapshot_Vector3* position_;
  bool interacting_;
  mutable int _cached_size_;
  friend struct protobuf_snapshot_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Snapshot_Vector3

// float x = 1;
inline void Snapshot_Vector3::clear_x() {
  x_ = 0;
}
inline float Snapshot_Vector3::x() const {
  // @@protoc_insertion_point(field_get:Snapshot.Vector3.x)
  return x_;
}
inline void Snapshot_Vector3::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Snapshot.Vector3.x)
}

// float y = 2;
inline void Snapshot_Vector3::clear_y() {
  y_ = 0;
}
inline float Snapshot_Vector3::y() const {
  // @@protoc_insertion_point(field_get:Snapshot.Vector3.y)
  return y_;
}
inline void Snapshot_Vector3::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Snapshot.Vector3.y)
}

// float z = 3;
inline void Snapshot_Vector3::clear_z() {
  z_ = 0;
}
inline float Snapshot_Vector3::z() const {
  // @@protoc_insertion_point(field_get:Snapshot.Vector3.z)
  return z_;
}
inline void Snapshot_Vector3::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:Snapshot.Vector3.z)
}

// -------------------------------------------------------------------

// Snapshot

// bool interacting = 1;
inline void Snapshot::clear_interacting() {
  interacting_ = false;
}
inline bool Snapshot::interacting() const {
  // @@protoc_insertion_point(field_get:Snapshot.interacting)
  return interacting_;
}
inline void Snapshot::set_interacting(bool value) {
  
  interacting_ = value;
  // @@protoc_insertion_point(field_set:Snapshot.interacting)
}

// .Snapshot.Vector3 position = 2;
inline bool Snapshot::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void Snapshot::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::Snapshot_Vector3& Snapshot::position() const {
  const ::Snapshot_Vector3* p = position_;
  // @@protoc_insertion_point(field_get:Snapshot.position)
  return p != NULL ? *p : *reinterpret_cast<const ::Snapshot_Vector3*>(
      &::_Snapshot_Vector3_default_instance_);
}
inline ::Snapshot_Vector3* Snapshot::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::Snapshot_Vector3;
  }
  // @@protoc_insertion_point(field_mutable:Snapshot.position)
  return position_;
}
inline ::Snapshot_Vector3* Snapshot::release_position() {
  // @@protoc_insertion_point(field_release:Snapshot.position)
  
  ::Snapshot_Vector3* temp = position_;
  position_ = NULL;
  return temp;
}
inline void Snapshot::set_allocated_position(::Snapshot_Vector3* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Snapshot.position)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_snapshot_2eproto__INCLUDED
